(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['404Page'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<main>\n	<h1 style=\"text-align: center;\">404 Error!</h1>\n	<h2 style=\"text-align: center;\">We were unable to find the specified page!</h2>\n\n	<h4 style=\"text-align: center;\">Click <a href=\"/\">here</a> to play the game.</h4>\n</main>";
},"useData":true});
templates['gamePage'] = template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.dieImg,depth0,{"name":"dieImg","data":data,"indent":"        ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1;

  return "<script src=\"index.js\" charset=\"utf-8\" defer></script>\n<main>\n    <h1 style=\"text-align: center; color: white\">Lets Play Hearts!</h1>\n    <div id=\"GameBoard\">\n        <button onclick=\"rollDice()\" id=\"dealBTN\">Roll</button>\n\n        <!--I was thinking this could be the spot for the random dice-->\n"
    + ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.dice : depth0),{"name":"each","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "")
    + "\n        <div id=\"playerHand\" class=\"fan active-hand\" data-fan='spacing: 0.2; width: 80; radius: 80; cards: AH, KH, QH, JH, QS'></div>\n        <div id=\"CPU_LEFT\" class=\"hand\" data-hand=\"x: -50; cards: 2H, 3H, 4H, 5H, 6H\"></div>\n        <div id=\"CPU_UP\" class=\"hand\" data-hand=\"y: -50; cards: AC, 2C, 3C, 4C, 5C\"></div>\n        <div id=\"CPU_RIGHT\" class=\"hand\" data-hand=\"x:  50; cards: AD, 2D, 3D, 4D, 5D\"></div>\n    </div>\n</main>\n<footer>\n    <p>Hearts is a open game based off twists from older games. For official rulesets, please visit the <a href=\"https://en.wikipedia.org/wiki/Hearts_(card_game)\">Wikipedia Article</a>. Our game was built using the help of <a href=\"http://richardschneider.github.io/cardsJS/\">cardsJS</a> from richardschneider his github.</p>\n</footer>\n";
},"usePartial":true,"useData":true});
templates['rulesPage'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<main>\n    <div class=\"RuleBook\">\n        <div class=\"RuleBlock\">\n        	<h2>Game Objectives</h2>\n        	<p>To be the player with the lowest score at the end of the game. When one player hits 100 points or higher, the game ends; and the player with the lowest score wins!</p>\n        </div>\n        <div class=\"RuleBlock\">\n        	<h2>Card Values</h2>\n        		<p>All cards from the hears suit have a value of 1 point. However, the Queen of the spades suit has a destructive point value of 13. Watch out for her!</p>\n        </div>\n        <div class=\"RuleBlock\">\n        	<h2>Scoring</h2>\n        		<p>At the end of each round, when every player has layed down a card, the player whomst placed the highest card, of the initial suit played, will take the pile of cards played, and all points that come with it. On the first hand taken, the two middle floating cards, if any, will go to the losing hand.</p>\n        </div>\n        <div class=\"RuleBlock\">\n    	    <h2>Dealing</h2>\n    	    	<p>The dealer can be choosen at random, and will deal every card until another round of cards can no longer be delt (these remaining cards are left in the middle pile)</p>\n        </div>\n        <div class=\"RuleBlock\">\n    	    <h2>Passing Cards</h2>\n    	    	<p>Before the start of the round, all players must pass cards:</p>\n    	    	<p>Round 1 - all players must pass right.</p>\n    	    	<p>Round 2 - all players must pass left.</p>\n    	    	<p>Round 3 - all players must pass 2 to the right.</p>\n    	    	<p>Round 4 - all players must pass 2 to the left.</p>\n    	    	<p>Round 5 - all players MUST HOLD their hand.</p>\n    	    	<p>Round 6 - repeat from round 1 passing.</p>\n        </div>\n        <div class=\"RuleBlock\">\n    	    <h2>Starting</h2>\n    	    	<p>In order for the round to start, a player must start with the 2 of the suit of clubs. If no one is holding the 2 of clubs, it is in the middle pile, and thus the 3 of clubs will start the game. From there the game plays one player at a time clockwise until no cards are left.</p>\n        </div>\n        <div class=\"RuleBlock\">\n            <h2>What Suit to Play</h2>\n    	    	<p>If it is your hand to start, you can choose any suit to play. The only exception to this rule, is if the round just started and hearts haven't been played, in which case you are  not aloud to start with hearts. If a player doesn't have any cards in the piles starting suit, then they can discard any one card.</p>\n        </div>\n        <div class=\"RuleBlock\">\n            <h2>What Card Number to Play</h2>\n    	    	<p>The recommendation would be to attempt and stay under the highest played card, however you won't always be the last to play hand, so here are a few tips to keep you in the game...</p>\n    	    	<br>\n    	    	<p>One dangerous stategy would be to run the cards. To do so: You MUST collect all point value cards by the end of the game. That includes the queen of spades and all heart suit cards. If done successfully, the runner will be awarded no points, and all other players receive 100 points.</p>\n        </div>\n        <div class=\"RuleBlock\">\n            <h2>When to Play Point Cards</h2>\n    	    	<p>You can play any point card at anypoint. The only exception to this is the first number of hands. In order to start a hand with a point card, at least one player must play a point card down as a substitute for a missing suit. By this, at least one player must play a heart when they can't play the starting suit of the round. From then on all cards are welcome.</p>\n        </div>\n        <div class=\"RuleBlock\">\n            <h2>Counting Points</h2>\n                <p>Once the round is over and there are no remaining cards left to play, each player will count their point cards up (1 for each heart, and 13 for those of which end with the queen of spades). There will always be a total of 26 points between all players. Recount if numbers do not add up.</p>\n        </div>\n        <br><br>\n    </div>\n</main>\n";
},"useData":true});
templates['scoresPage'] = template({"1":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = helpers.each.call(depth0 != null ? depth0 : (container.nullContext || {}),(depth0 != null ? depth0.scores : depth0),{"name":"each","hash":{},"fn":container.program(2, data, 0),"inverse":container.noop,"data":data})) != null ? stack1 : "");
},"2":function(container,depth0,helpers,partials,data) {
    var stack1;

  return ((stack1 = container.invokePartial(partials.newScore,depth0,{"name":"newScore","data":data,"indent":"            ","helpers":helpers,"partials":partials,"decorators":container.decorators})) != null ? stack1 : "");
},"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper, options, buffer = 
  "<script src=\"/score.js\" charset=\"utf-8\" defer></script>\n<link rel=\"stylesheet\" href=\"scorePage.css\" media=\"screen\" />\n\n<div class=\"scoretab\">\n<h2 class=\"scoreTitle\">Top Scores</h2>\n    <ol class=\"scoreList\">\n        <!--template to fill in name and score-->\n";
  stack1 = ((helper = (helper = helpers.fromDB || (depth0 != null ? depth0.fromDB : depth0)) != null ? helper : helpers.helperMissing),(options={"name":"fromDB","hash":{},"fn":container.program(1, data, 0),"inverse":container.noop,"data":data}),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),options) : helper));
  if (!helpers.fromDB) { stack1 = helpers.blockHelperMissing.call(depth0,stack1,options)}
  if (stack1 != null) { buffer += stack1; }
  return buffer + "    </ol>\n    <p style=\"text-align: center;\">-- Lower is better --</p>\n</div>\n";
},"usePartial":true,"useData":true});
templates['settingsPage'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    return "<head><title>Hearts - Play!</title></head>\n<body>\n    <h3 style=\"text-align: center;\">Change game settings here</h3>\n</body>\n";
},"useData":true});
templates['main'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var stack1, helper;

  return "ï»¿<!--The basic framework for any of the other pages generated-->\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\"/>\n    <title>Hearts</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <!--We can add 3rd party scripts and such here-->\n    <!--<link rel=\"stylesheet\" type=\"text/css\" href=\"https://unpkg.com/cardsJS/dist/cards.min.css\"/>-->\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"GameStyle.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"cards.css\"/>\n\n    <!--handlebar script to gain access to features-->\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.1.2/handlebars.runtime.js\" charset=\"utf-8\" defer></script>\n    <!--<script src=\"https://unpkg.com/cardsJS/dist/cards.min.js\" type=\"text/javascript\"></script>-->\n    <!--<script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js\" type='text/javascript'></script>-->\n    <!--<script src='http://cdnjs.cloudflare.com/ajax/libs/knockout/3.1.0/knockout-min.js' type='text/javascript'></script>-->\n    <!--<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js\" type='text/javascript'></script>-->\n    <!--<script src=\"https://unpkg.com/cardsJS/dist/cards.min.js\" type=\"text/javascript\"></script>-->\n    <!--<script src=\"cards.js\" type=\"text/javascript\"></script>-->\n    <!--Add scripts to include partials here-->\n</head>\n\n<body>\n    <header>\n        <h1 class=\"site-title\">Hearts - The Card Game!</h1>\n    </header>\n    <header>\n        <nav class=\"navbar\">\n            <ul class=\"navlist\">\n                <li class=\"navitem\" id=\"navButton\"><a href=\"/\">Play!</a></li>\n                <li class=\"navitem\" id=\"navButton\"><a href=\"/rules\">Rules</a></li>\n                <li class=\"navitem\" id=\"navButton\"><a href=\"/scores\">Highscores</a></li>\n                <li class=\"navitem\" id=\"navButton\"><a href=\"/settings\">Settings</a></li>\n\n            </ul>\n        </nav>\n    </header>\n    <!--this is where the body of the other pages will go-->\n    <main class=\"playSpace\">\n    "
    + ((stack1 = ((helper = (helper = helpers.body || (depth0 != null ? depth0.body : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"body","hash":{},"data":data}) : helper))) != null ? stack1 : "")
    + "\n    </main>\n</body>\n\n</html>\n";
},"useData":true});
templates['newScore'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper, alias1=depth0 != null ? depth0 : (container.nullContext || {}), alias2=helpers.helperMissing, alias3="function", alias4=container.escapeExpression;

  return "<li>\n    <div class=\"score\">\n        <h2 class=\"scoreName\">\n            "
    + alias4(((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"name","hash":{},"data":data}) : helper)))
    + ": "
    + alias4(((helper = (helper = helpers.score || (depth0 != null ? depth0.score : depth0)) != null ? helper : alias2),(typeof helper === alias3 ? helper.call(alias1,{"name":"score","hash":{},"data":data}) : helper)))
    + "\n            <button class=\"deleteButton\">DELETE</button>\n        </h2>\n    </div>\n</li>";
},"useData":true});
templates['dieImg'] = template({"compiler":[7,">= 4.0.0"],"main":function(container,depth0,helpers,partials,data) {
    var helper;

  return "<div id=\"dieImage\">\n    <!-- randomly assign and image of die -->\n    <img src=\""
    + container.escapeExpression(((helper = (helper = helpers.image || (depth0 != null ? depth0.image : depth0)) != null ? helper : helpers.helperMissing),(typeof helper === "function" ? helper.call(depth0 != null ? depth0 : (container.nullContext || {}),{"name":"image","hash":{},"data":data}) : helper)))
    + "\" />\n</div>";
},"useData":true});
})();